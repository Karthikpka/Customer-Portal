{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/customer-details/customer.details.component.html","webpack:///./src/app/customer-details/customer.details.component.sass","webpack:///./src/app/customer-details/customer.details.component.ts","webpack:///./src/app/customerapp.component.html","webpack:///./src/app/customerapp.component.sass","webpack:///./src/app/customerapp.component.ts","webpack:///./src/app/customerapp.module.ts","webpack:///./src/app/customers-list/customers.list.component.html","webpack:///./src/app/customers-list/customers.list.component.sass","webpack:///./src/app/customers-list/customers.list.component.ts","webpack:///./src/app/services/customer.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAE4B;AACM;AAEzF,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+FAAsB;KAClC;IACD;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,qGAAwB;KACpC;CACF,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACrB7B,m1CAAm1C,MAAM,MAAM,geAAge,MAAM,sJ;;;;;;;;;;;ACAr0D,kCAAkC,mBAAmB,EAAE,oJAAoJ,iBAAiB,EAAE,2BAA2B,kBAAkB,EAAE,gCAAgC,qCAAqC,EAAE,8BAA8B,qCAAqC,EAAE,wCAAwC,iBAAiB,uBAAuB,EAAE,2BAA2B,4BAA4B,wBAAwB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9f;AAEtB;AAEC;AAEqB;AAQ9D;IAYI,kCAAoB,MAAc,EACpB,YAA6B;QADvB,WAAM,GAAN,MAAM,CAAQ;QACpB,iBAAY,GAAZ,YAAY,CAAiB;QAX3C,aAAQ,GACR;YACI,SAAS,EAAE,IAAI;YACf,QAAQ,EAAE,IAAI;YACd,MAAM,EAAE,IAAI;YACZ,MAAM,EAAE,IAAI;SACf,CAAC;IAMF,CAAC;IAED,2CAAQ,GAAR;IACA,CAAC;IAED,yCAAM,GAAN;QAAA,iBAYC;QAXG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC;aAC1C,SAAS,CAAC,UAAC,gBAAqB;YAC7B,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACnB,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;YAC1C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/B,CAAC;QACL,CAAC,EACD,UAAC,GAAQ;YACL,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC;QAAhB,CAAgB,CACnB,CAAC;IACV,CAAC;IAED,yCAAM,GAAN,UAAO,KAAY;QACf,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC;IA1B0B;QAA1B,+DAAS,CAAC,cAAc,CAAC;kCAAe,qDAAM;kEAAC;IAVvC,wBAAwB;QALpC,+DAAS,CAAC;YACP,QAAQ,EAAE,sBAAsB;;;SAGnC,CAAC;yCAa8B,sDAAM;YACN,0EAAe;OAblC,wBAAwB,CAsCpC;IAAD,+BAAC;CAAA;AAtCoC;;;;;;;;;;;;ACdrC,2lB;;;;;;;;;;;ACAA,2BAA2B,oBAAoB,oBAAoB,EAAE,gBAAgB,gBAAgB,4BAA4B,EAAE,iBAAiB,wBAAwB,EAAE,iBAAiB,0BAA0B,sBAAsB,EAAE,iBAAiB,4BAA4B,EAAE,cAAc,sBAAsB,gBAAgB,EAAE,G;;;;;;;;;;;;;;;;;;;;;ACA3S;AAO3C;IAAA;IAEA,CAAC;IAFY,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;OACW,oBAAoB,CAEhC;IAAD,2BAAC;CAAA;AAFgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACP0B;AAClB;AACI;AACW;AAEO;AACoB;AACM;AAC5B;AACL;AAkBxD;IAAA;IAAiC,CAAC;IAArB,iBAAiB;QAf7B,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2EAAoB;gBACpB,+FAAsB;gBACtB,qGAAwB;aACzB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,0DAAW;gBACX,qEAAgB;aACjB;YACD,SAAS,EAAE,CAAC,0EAAe,CAAC;YAC5B,SAAS,EAAE,CAAC,2EAAoB,CAAC;SAClC,CAAC;OACW,iBAAiB,CAAI;IAAD,wBAAC;CAAA;AAAJ;;;;;;;;;;;;AC3B9B,2KAA2K,2GAA2G,iCAAiC,GAAG,iCAAiC,sPAAsP,6BAA6B,2OAA2O,iBAAiB,kV;;;;;;;;;;;ACA12B,8BAA8B,gBAAgB,mBAAmB,EAAE,qBAAqB,eAAe,EAAE,WAAW,2BAA2B,8BAA8B,gBAAgB,uBAAuB,uBAAuB,EAAE,kBAAkB,8BAA8B,oBAAoB,iBAAiB,gBAAgB,gBAAgB,EAAE,gBAAgB,qBAAqB,EAAE,qBAAqB,oBAAoB,gBAAgB,EAAE,sBAAsB,qBAAqB,EAAE,wBAAwB,gBAAgB,gBAAgB,EAAE,iBAAiB,iBAAiB,gBAAgB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;ACA9iB;AACY;AAW/D;IAII,gCAAoB,YAA6B;QAAjD,iBAEC;QAFmB,iBAAY,GAAZ,YAAY,CAAiB;QAC7C,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,aAAG,IAAM,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACpF,CAAC;IAED,yCAAQ,GAAR;IAEA,CAAC;IAVQ,sBAAsB;QANlC,+DAAS,CAAC;YACP,QAAQ,EAAE,oBAAoB;;;SAGjC,CAAC;yCAMoC,0EAAe;OAJxC,sBAAsB,CAclC;IAAD,6BAAC;CAAA;AAdkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZS;AACuC;AACjD;AACU;AAI5C,IAAM,WAAW,GAAG;IAChB,OAAO,EAAE,IAAI,gEAAW,CAAC;QACrB,cAAc,EAAE,gCAAgC;KACnD,CAAC;CACL,CAAC;AAGF;IAME,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJlC,oBAAe,GAAG,sCAAsC,CAAC;QACzD,oBAAe,GAAG,6CAA6C,CAAC;IAKlE,CAAC;IAEC,sCAAY,GAAZ;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,IAAI,CAAC,eAAe,GAAE,cAAc,CAAC;aACjD,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED,wCAAc,GAAd,UAAe,QAAkB;QAC7B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAU,IAAI,CAAC,eAAe,GAAE,aAAa,EAAE,QAAQ,EAAE,WAAW,CAAC;aACrF,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC5C,CAAC;IAEO,qCAAW,GAAnB,UAAoB,KAAwB;QACxC,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,YAAY,UAAU,CAAC,CAAC,CAAC;YACpC,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC5D,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,OAAO,CAAC,GAAG,CAAC,2BAAyB,KAAK,CAAC,MAAQ,CAAC,CAAC;QACzD,CAAC;QACD,MAAM,CAAC,uDAAU,CACb,yCAAyC,CAAC,CAAC;IACnD,CAAC;IAAA,CAAC;IA5BO,eAAe;QAD3B,gEAAU,EAAE;yCAOe,+DAAU;OANzB,eAAe,CA6B3B;IAAD,sBAAC;CAAA;AA7B2B;;;;;;;;;;;;;;ACd5B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdnB;AAC2B;AAEd;AACJ;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yEAAiB,CAAC;KACxD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CustomersListComponent } from './customers-list/customers.list.component';\nimport { CustomerDetailsComponent } from './customer-details/customer.details.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CustomersListComponent\n  },\n  {\n    path: 'about',\n    component: CustomerDetailsComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<form (ngSubmit)=\\\"submit()\\\" #customerForm=\\\"ngForm\\\" class=\\\"customer-form\\\" novalidate>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>First Name</label>\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"customer.firstName\\\" #firstName=\\\"ngModel\\\" required>\\r\\n    <div class=\\\"alert alert-danger\\\" [hidden]=\\\"firstName.pristine || firstName.valid\\\">First Name is required</div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Last Name</label>\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"customer.lastName\\\" #lastName=\\\"ngModel\\\">\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Mobile</label>\\r\\n    <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"mobile\\\" [(ngModel)]=\\\"customer.mobile\\\" #mobile=\\\"ngModel\\\" required>\\r\\n    <div class=\\\"alert alert-danger\\\" [hidden]=\\\"mobile.pristine || mobile.valid\\\">Mobile is required</div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Gender</label><br>\\r\\n    <!--<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"gender\\\" [(ngModel)]=\\\"customer.gender\\\" #gender=\\\"ngModel\\\" required>-->\\r\\n    <div>\\r\\n      <label>\\r\\n        <input type=\\\"radio\\\" class=\\\"form-control radio\\\" name=\\\"gender\\\" [(ngModel)]=\\\"customer.gender\\\" #gender=\\\"ngModel\\\" required value=\\\"Male\\\"> Male &nbsp;&nbsp;&nbsp;\\r\\n      </label>\\r\\n      <label>\\r\\n        <input type=\\\"radio\\\" class=\\\"form-control radio\\\" name=\\\"gender\\\" [(ngModel)]=\\\"customer.gender\\\" #gender=\\\"ngModel\\\" required value=\\\"Female\\\"> Female\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class=\\\"alert alert-danger\\\" [hidden]=\\\"gender.pristine || gender.valid\\\">Gender is required</div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"pull-right\\\">\\r\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"cancel($event)\\\">Cancel</button>&nbsp;&nbsp;\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"customerForm.pristine || !customerForm.valid\\\">Insert</button>\\r\\n  </div>\\r\\n\"","module.exports = \".customer-form {\\n  margin: 1% 20%; }\\n  .customer-form input[type='text'], .customer-form input[type='number'], .customer-form input[type='email'], .customer-form input[type='radio'] {\\n    width: 40%; }\\n  .customer-form select {\\n    width: 100%; }\\n  .customer-form .ng-invalid {\\n    border-left: 5px solid #a94442; }\\n  .customer-form .ng-valid {\\n    border-left: 5px solid #42A948; }\\n  .customer-form .alert.alert-danger {\\n    width: 40%;\\n    line-height: 30%; }\\n  .customer-form .radio {\\n    width: 30% !important;\\n    padding-left: 20%; }\\n\"","ï»¿import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\n\nimport { CustomerService } from '../services/customer.service'\nimport { Customer } from '../shared/entitymodels/customer';\n\n@Component({\n    selector: 'app-customer.details',\n    templateUrl: './customer.details.component.html',\n    styleUrls: ['./customer.details.component.sass'] \n})\nexport class CustomerDetailsComponent implements OnInit {\n\n    customer: Customer =\n    {\n        firstName: null,\n        lastName: null,\n        gender: null,\n        mobile: null,\n    };\n\n    @ViewChild('customerForm') customerForm: NgForm;\n\n    constructor(private router: Router\n        , private customerData: CustomerService) {\n    }\n\n    ngOnInit() {\n    }\n\n    submit() {\n        this.customerData.insertCustomer(this.customer)\n            .subscribe((insertedCustomer: any) => {\n                if (insertedCustomer) {\n                    console.log('Unable to add customer');\n                } else {\n                    this.router.navigate(['']);\n                }\n            },\n            (err: any) =>\n                console.log(err)\n            );\n    }\n\n    cancel(event: Event) {\n        event.preventDefault();\n        this.router.navigate(['']);\n    }\n\n}\n","module.exports = \"<div class=\\\"color-dark text-center\\\">\\r\\n  <div class=\\\"headerImg\\\"> <img src=\\\"assets/images/people.png\\\" alt=\\\"logo\\\" /></div>\\r\\n  <div class=\\\"header\\\"> CUSTOMER PORTAL </div>\\r\\n</div>\\r\\n<br>\\r\\n<nav class=\\\"navbar navbar-expand-lg cardHeader\\\">\\r\\n  <a class=\\\"navbar-brand navbartext\\\" href=\\\"#\\\">Customers</a>\\r\\n  <div class=\\\"navbar navbar-collapse\\\">\\r\\n    <ul class=\\\"navbar-nav addtext\\\">\\r\\n      <li>\\r\\n        <a class=\\\"nav-link navbartext\\\" href=\\\"about\\\"> Add New Customer</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\\r\\n<router-outlet></router-outlet>\"","module.exports = \".header {\\n  padding: 1% 38%;\\n  font-size: 145%; }\\n\\n.headerImg {\\n  float: left;\\n  padding: 0.7% 0% 1% 39%; }\\n\\n.color-dark {\\n  background: #2885C4; }\\n\\n.cardHeader {\\n  padding: 0% 0% 1% 16%;\\n  font-weight: bold; }\\n\\n.navbartext {\\n  color: white !important; }\\n\\n.addtext {\\n  padding-left: 62%;\\n  width: 100%; }\\n\"","ï»¿import { Component } from '@angular/core';\n\n@Component({\n  selector: 'customerapp-root',\n  templateUrl: './customerapp.component.html',\n  styleUrls: ['./customerapp.component.sass']\n})\nexport class CustomerAppComponent {\n\n}\n","ï»¿import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { CustomerAppComponent } from './customerapp.component';\nimport { CustomersListComponent } from './customers-list/customers.list.component';\nimport { CustomerDetailsComponent } from './customer-details/customer.details.component';\nimport { CustomerService } from './services/customer.service'\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [ \n    CustomerAppComponent,\n    CustomersListComponent,\n    CustomerDetailsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [CustomerService],\n  bootstrap: [CustomerAppComponent]\n})\nexport class CustomerAppModule { }\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row card-container\\\">\\r\\n    <div class=\\\"col-sm-6 col-md-4 col-lg-3\\\" *ngFor=\\\"let customer of customerList;\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <a>\\r\\n            {{customer.FirstName | titlecase }} {{ customer.LastName | titlecase }}\\r\\n          </a>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"clearfix\\\">\\r\\n            <div class=\\\"pull-left card-body-left\\\">\\r\\n              <a href=\\\"#\\\">\\r\\n                <img src=\\\"assets/images/{{customer.Gender | lowercase}}.png\\\" class=\\\"card-image\\\" />\\r\\n              </a>\\r\\n            </div>\\r\\n            <div class=\\\"pull-left card-body-right\\\">\\r\\n              <div class=\\\"card-body-content\\\">\\r\\n                Contact No:\\r\\n                {{customer.Mobile}}\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"customerList?.length == 0\\\">\\r\\n    No Records\\r\\n  </div>\\r\\n  <!--Need to Process Icon\\r\\n  <!--<div style=\\\"color:red\\\" *ngIf=\\\"!customerList\\\">\\r\\n    Server Error\\r\\n  </div>-->\\r\\n</div>\"","module.exports = \".container {\\n  width: 100%;\\n  margin: 0% 15%; }\\n\\n.card-container {\\n  width: 85%; }\\n\\n.card {\\n  background-color: #fff;\\n  border: 1px solid #d4d4d4;\\n  height: 80%;\\n  margin-bottom: 16%;\\n  position: relative; }\\n\\n.card-header {\\n  background-color: #027FF4;\\n  font-size: 14pt;\\n  color: white;\\n  padding: 3%;\\n  width: 100%; }\\n\\n.card-body {\\n  padding-left: 5%; }\\n\\n.card-body-left {\\n  margin-top: -5%;\\n  float: left; }\\n\\n.card-body-right {\\n  margin-left: 40%; }\\n\\n.card-body-content {\\n  width: 100%;\\n  color: blue; }\\n\\n.card-image {\\n  height: 50px;\\n  width: 50px; }\\n\"","ï»¿import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from '../services/customer.service';\nimport { Customer } from '../shared/entitymodels/customer';\nimport { Observable } from 'rxjs';\r\n\n\n@Component({\n    selector: 'app-customers-list',\n    templateUrl: './customers.list.component.html',\n    styleUrls: ['./customers.list.component.sass']\n})\n\nexport class CustomersListComponent implements OnInit {\n\n    customerList: any;\n\n    constructor(private customerData: CustomerService) {\n        this.customerData.getCustomers().subscribe(res => { this.customerList = res; });\n    }\n\n    ngOnInit() {\n\n    }\n\n\n\n}\n","ï»¿import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders  } from '@angular/common/http';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { Customer } from '../shared/entitymodels/customer';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({\r\n        'Content-Type': 'application/json;charset=UTF-8'\r\n    })\r\n};\r\n\r\n@Injectable()\r\nexport class CustomerService {\r\n\r\n    customerBaseUrl = 'http://localhost:60485/api/Customer/';\r\n    customerMockUrl = 'assets\\\\mockresponses\\\\customerDetails.json';\r\n   \r\n   \r\n  constructor(private http: HttpClient) { \r\n      \r\n  }\r\n\r\n    getCustomers(){\r\n        return this.http.get<Customer[]>(this.customerBaseUrl +'GetCustomers')\r\n                            .pipe(catchError(this.handleError));\r\n    } \r\n\r\n    insertCustomer(customer: Customer){\r\n        return this.http.post<boolean>(this.customerBaseUrl +'AddCustomer', customer, httpOptions)\r\n            .pipe(catchError(this.handleError));\r\n    }\r\n    \r\n    private handleError(error: HttpErrorResponse) {\r\n        if (error.error instanceof ErrorEvent) {\r\n            console.log('An error occurred:' + error.error.message);\r\n        } else {\r\n            console.log(`Backend returned code ${error.status}`);\r\n        }\r\n        return throwError(\r\n            'Error occurred; please try again later.');\r\n    };\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","ï»¿import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { CustomerAppModule } from './app/customerapp.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(CustomerAppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}